/******************** (C) COPYRIGHT 2007 NXP LPC2300 ********************
* File Name          : StdMtr.h
* Author             : 张力阵
* Version            : V1.0.0
* 标准表处理程序 声明和预定义
*******************************************************************************/
#define AUTO             0                   //自动换挡
#define MANUAL           0xFF                //手动换挡

#define CT_CHU           '1'                 //标准表接初极
#define CT_CI            '2'                 //标准表接次级

#define MDP2000_UR_NUM   4                   //MDP2000电压档位数
#define MDP2000_IR_NUM   10                  //MDP2000电流档位数

#define COM3000_UR_NUM   4                   //COM3003电压档位数
#define COM3000_IR_NUM   15                  //COM3003电流档位数

#define K2006_UR_NUM     4                   //K2006  电压档位数
#define K2006_IR_NUM     16                  //K2006  电流档位数
                                                      
#define RD33_UR_NUM      4                   //RD33   电压档位数
#define RD33_IR_NUM      15                  //RD33   电流档位数

#define SMTR_DATA_LEN    9                   //

#define MIN_RFRM_LEN     4                   //最小帧长
                                     
#define MAIN_SMTR_SEL    0                   //选择主标准
#define AUX_SMTR_SEL     1                   //选择副标准
                                     
#define SMTR_CHG_TIME    200                 //标准表改变定时
#define SMTR_SET_TIME    15                  //处理标准表设置命令定时
#define SMTR_TRS_OVTM    500                 //发送超时

#define W_MEA            0                   //有功测量模式
#define VAR_MEA          1                   //无功测量模式
#define DVAR_MEA         2                   //跨线无功测量模式

#define W4               0                   //四线接法
#define W3               1                   //三相接法

#define ASC_CODE         0                   //ASC 码 发送
//标准表 通信功能定义
#define BLIND_MTR        0                   //无通信功能标准表
#define VIEW_MTR         1                   //有通信能力标准表
//标准表宽窄量程                             
#define NARROW_MTR       0                   //窄量程
#define BROAD_MTR        1                   //宽量程
#define MAIN_SMTR        0                   //
#define AUX_SMTR         1                   //
//标准表代码                                 
#define MDP1000_ID       '0'                 //MDP1000窄量程标准表     SMS公司
#define MDP1000A_ID      (MDP1000_ID+1)      //MDP1000A宽量程标准表    SMS公司
#define C12_RM10_ID      (MDP1000A_ID+1)     //单相宽量程不带通信      C12 RM11 RM10等
#define MDP2000_ID       (C12_RM10_ID+1)     //MDP2000窄量程标准表     SMS公司
#define MDP2000_2_ID     (MDP2000_ID+1)      //MDP2000_2窄量程标准表   SMS公司
#define MDP2000A_ID      (MDP2000_2_ID+1)    //MDP2000A宽量程标准表    SMS公司
#define MDP2002A_ID      (MDP2000A_ID+1)     //MDP2002A宽量程标准表    SMS公司 除通信波特率与MDP2000A不同外 其它相同
#define COM3000_ID       (MDP2002A_ID+1)     //COM3000宽量程标准表     Zera公司
#define K2006_ID         (COM3000_ID+1)      //K2006宽量程标准表       EMH/MTE公司
#define RD33_ID          (K2006_ID+1)        //RD33宽量程标准表        RADIAN公司
#define COM2003_ID       (RD33_ID+1)         //COM200.3                EMH
#define NO_SMTR          (COM2003_ID+1)      //无标准

#define DEFAULT_SMTR     MDP1000A_ID         //默认标准表
//定义标准表波特率                           
#define MDP1000_BAUD     9600                //MDP1000窄量程标准表     SMS公司
#define MDP1000A_BAUD    9600                //MDP1000A宽量程标准表    SMS公司
#define C12_RM10_BAUD    960                 //单相宽量程不带通信      C12 RM11 RM10 默认
#define MDP2000_BAUD     9600                //MDP2000窄量程标准表     SMS公司
#define MDP2000_2_BAUD   19200               //MDP2000_2窄量程标准表   SMS公司
#define MDP2000A_BAUD    9600                //MDP2000A宽量程标准表    SMS公司
#define MDP2002A_BAUD    19200               //MDP2002A窄量程标准表    SMS公司
#define COM3000_BAUD     4800                //COM3000宽量程标准表     Zera公司
#define K2006_BAUD       19200               //K2006宽量程标准表       EMH/MTE公司
#define RD33_BAUD        57600               //RD33宽量程标准表        RADIAN公司
//标准表帧属性定义 定义标准表发送缓冲区中 帧的属性
#define SMTR_NO_CMD      0xFF                //没有命令
//命令定义 标准表
#define SET_SMTR_UR      0                   //设置标准表电压档位
#define SET_SMTR_IR      (SET_SMTR_UR+1)       //设置标准表电流档位
#define SET_SMTR_JX      (SET_SMTR_IR+1)       //设置接线方式
#define SET_SMTR_AUTO    (SET_SMTR_JX+1)       //设置自动换挡模式        
#define SET_SMTR_TI      (SET_SMTR_AUTO+1)     //设置标准表内部测量积分时间        
#define SET_SMTR_PLSM    (SET_SMTR_TI+1)       //设置脉冲输出类型 有功 无功  
#define SET_SMTR_CST     (SET_SMTR_PLSM+1)     //设置标准表常数      
#define SET_SMTR_IIN     (SET_SMTR_CST+1)      //设置电流输入端子 大电流端子 OR 小电流端子       
#define SET_SMTR_BAUD    (SET_SMTR_IIN+1)      //设置通信波特率 
#define READ_STS_CMD     (SET_SMTR_BAUD+1)     //读取状态命令         
#define READ_DATA_CMD    (READ_STS_CMD+1)      //读取数据命令   
#define READ_WAVE_CMD    (READ_DATA_CMD+1)     //读取波形命令
#define SMTR_CMD_NUMB    (READ_WAVE_CMD+1)     //标准表设置命令个数
//数据查询命令
#define READ_ALL_DATA     0                  //查询所有数据命令
#define READ_U_DATA       (READ_ALL_DATA+1)    //查询三相电压有效值
#define READ_I_DATA       (READ_U_DATA+1)      //查询三相电流有效值
#define READ_W_DATA       (READ_I_DATA+1)      //查询三相有功功率
#define READ_VAR_DATA     (READ_W_DATA+1)      //查询三相无功功率
#define READ_VA_DATA      (READ_VAR_DATA+1)    //查询三相视在功率
#define READ_DVAR_DATA    (READ_VA_DATA+1)     //查询三相跨线无功功率
#define READ_PQS_DATA     (READ_DVAR_DATA+1)   //查询三相合相功率 P Q S 有功 无功 视在
#define READ_SW_DATA      (READ_PQS_DATA+1)    //查询合相有功功率
#define READ_SVAR_DATA    (READ_SW_DATA+1)     //查询合相无功功率
#define READ_SVA_DATA     (READ_SVAR_DATA+1)   //查询合相视在功率
#define READ_FR_DATA      (READ_SVA_DATA+1)    //查询频率
#define READ_PHU_DATA     (READ_FR_DATA+1)     //查询电压相位
#define READ_PHI_DATA     (READ_PHU_DATA+1)    //查询电流相位
                          
#define RDATA_CMD_NUMB    (READ_PHI_DATA+1)    //标准表数据读取命令个数

//MDP1000 2000 系列标准表设置命令
#define SET_MDP_SMTR_UR   0                  //设置MDP系列标准表电压档位
#define SET_MDP_SMTR_JX   1                  //设置MDP系列标准表接线方式
#define SET_MDP_SMTR_CST  2                  //设置MDP系列标准表常数

//COM3000 系列标准表设置命令
#define SET_COM3000_UR    0                  //设置COM3000系列标准表电压档位
#define SET_COM3000_IR    1                  //设置COM3000系列标准表电流档位
#define SET_COM3000_JX    2                  //设置COM3000系列标准表接线方式
#define SET_COM3000_TI    3                  //设置COM3000系列标准表积分时间
#define SET_COM3000_AUTO  4                  //设置COM3000系列标准表自动测量模式
#define SET_COM3000_BR    5                  //设置COM3000系列标准表波特率 回默认值
//K2006 系列标准表设置命令
#define SET_K2006_UR      0                  //设置K2006系列标准表电压档位
#define SET_K2006_IR      1                  //设置K2006系列标准表电流档位
#define SET_K2006_JX      2                  //设置K2006系列标准表接线方式
#define SET_K2006_TI      3                  //设置K2006系列标准表积分时间
#define SET_K2006_AUTO    4                  //设置K2006系列标准表自动测量模式
#define SET_K2006_PLS     5                  //设置K2006系列标准表脉冲输出
#define SET_K2006_IIN     6                  //设置K2006系列标准表电流输入
#define SET_K2006_BR      7                  //设置K2006系列标准表波特率 回默认值
//RD33 系列标准表设置命令
#define SET_RD33_PCST     0                  //设置RD33系列标准表有功常数
#define SET_RD33_QCST     1                  //设置RD33系列标准表无功常数
//#define SET_RD33_DQCST    2                  //设置RD33系列标准表跨线无功常数
#define SET_RD33_JX       2                  //设置RD33系列标准表接线方式 和K2006的 设置脉冲输出功能类似

#define RD33_P_MODE       0x00               //设置RD33系列标准表有功模式
#define RD33_Q_MODE       0x01               //设置RD33系列标准表无功模式
#define RD33_J_MODE       0x0f               //设置RD33系列标准表跨线无功模式

#define RD33_NOBACK_CST   0x00               //RD33不返回常数
#define RD33_BACK_CST     0x01               //RD33返回常数

//标准表读数据命令条数
#define MDP_SMTR_RDATA_NUMB 1                //MDP     系列标准表读数据命令个数ts td
#define COM3000_RDATA_NUMB  1                //COM3000 系列标准表读数据命令个数MA
#define K2006_RDATA_NUMB    8                //K2006   系列标准表读数据命令个数
#define RD33_RDATA_NUMB     8                //RD33    系列标准表读数据命令个数


//MDP1000 系列标准表接收命令索引
#define MDP1000_U_WAVE      0                   //MDP1000 电压波形数据
#define MDP1000_I_WAVE      (MDP1000_U_WAVE+1)  //MDP1000 电流波形数据
#define MDP1000_U_RMS       (MDP1000_I_WAVE+1)  //MDP1000 电压有效值
#define MDP1000_I_RMS       (MDP1000_U_RMS+1)   //MDP1000 电流有效值
#define MDP1000_Wh          (MDP1000_I_RMS+1)   //MDP1000 有功功率
#define MDP1000_Var         (MDP1000_Wh+1)      //MDP1000 无功功率
#define MDP1000_Pha         (MDP1000_Var+1)     //MDP1000 电流相位
#define MDP1000_Fr          (MDP1000_Pha+1)     //MDP1000 频率
#define MDP1000_JX          (MDP1000_Fr+1)      // 
#define MDP1000_Ir1         (MDP1000_JX+1)      //MDP1000 电流档位   
#define MDP1000_Ir2         (MDP1000_Ir1+1)     //MDP1000 电流档位 

//MDP2000 系列标准表接收命令索引
#define MDP2000_HEAD        0                   //头 SJ:
#define MDP2000_UA_WAVE     (MDP2000_HEAD+1)      //A相电压波形数据
#define MDP2000_UB_WAVE     (MDP2000_UA_WAVE+1)   //A相电压波形数据
#define MDP2000_UC_WAVE     (MDP2000_UB_WAVE+1)   //A相电压波形数据
#define MDP2000_IA_WAVE     (MDP2000_UC_WAVE+1)   //A相电流波形数据
#define MDP2000_IB_WAVE     (MDP2000_IA_WAVE+1)   //A相电流波形数据
#define MDP2000_IC_WAVE     (MDP2000_IB_WAVE+1)   //A相电流波形数据
#define MDP2000_UA_RMS      (MDP2000_IC_WAVE+1)   //A相电压有效值
#define MDP2000_UB_RMS      (MDP2000_UA_RMS+1)    //B相电压有效值
#define MDP2000_UC_RMS      (MDP2000_UB_RMS+1)    //C相电压有效值
#define MDP2000_IA_RMS      (MDP2000_UC_RMS+1)    //A相电流有效值
#define MDP2000_IB_RMS      (MDP2000_IA_RMS+1)    //B相电流有效值
#define MDP2000_IC_RMS      (MDP2000_IB_RMS+1)    //C相电流有效值
#define MDP2000_WhA         (MDP2000_IC_RMS+1)    //A相有功功率
#define MDP2000_WhB         (MDP2000_WhA+1)       //B相有功功率
#define MDP2000_WhC         (MDP2000_WhB+1)       //C相有功功率
#define MDP2000_VarA        (MDP2000_WhC+1)       //A相无功功率
#define MDP2000_VarB        (MDP2000_VarA+1)      //B相无功功率
#define MDP2000_VarC        (MDP2000_VarB+1)      //C相无功功率
#define MDP2000_DVarA       (MDP2000_VarC+1)      //A相跨线无功功率
#define MDP2000_DVarB       (MDP2000_DVarA+1)     //B相跨线无功功率
#define MDP2000_DVarC       (MDP2000_DVarB+1)     //C相跨线无功功率
#define MDP2000_Pha_UA      (MDP2000_DVarC+1)     //A相电压相位有功功率
#define MDP2000_Pha_UB      (MDP2000_Pha_UA+1)    //B相电压相位有功功率
#define MDP2000_Pha_UC      (MDP2000_Pha_UB+1)    //C相电压相位有功功率
#define MDP2000_Pha_IA      (MDP2000_Pha_UC+1)    //A相电流相位有功功率
#define MDP2000_Pha_IB      (MDP2000_Pha_IA+1)    //B相电流相位有功功率
#define MDP2000_Pha_IC      (MDP2000_Pha_IB+1)    //C相电流相位有功功率
#define MDP2000_Fr          (MDP2000_Pha_IC+1)    //频率
#define MDP2000_Wh_Sum      (MDP2000_Fr+1)        //合相有功功率
#define MDP2000_Var_Sum     (MDP2000_Wh_Sum+1)    //合相无功功率
#define MDP2000_DVar_Sum    (MDP2000_Var_Sum+1)   //合相跨线无功功率
#define MDP2000_Ur1         (MDP2000_DVar_Sum+1)  //电压档位
#define MDP2000_Ir1         (MDP2000_Ur1+1)       //电流档位
#define MDP2000_Jx1         (MDP2000_Ir1+1)       //接线方式
#define MDP2000_Ur2         (MDP2000_Jx1+1)       //电压档位
#define MDP2000_Ir2         (MDP2000_Ur2+1)       //电流档位
#define MDP2000_Jx2         (MDP2000_Ir2+1)       //接线方式
//MDP2000_2 系列标准表接收命令索引
#define MDP2000_2_HEAD      0                   //头 SJ:
#define MDP2000_2_UA_WAVE   (MDP2000_2_HEAD+1)    //A相电压波形数据
#define MDP2000_2_UB_WAVE   (MDP2000_2_UA_WAVE+1) //A相电压波形数据
#define MDP2000_2_UC_WAVE   (MDP2000_2_UB_WAVE+1) //A相电压波形数据
#define MDP2000_2_IA_WAVE   (MDP2000_2_UC_WAVE+1) //A相电流波形数据
#define MDP2000_2_IB_WAVE   (MDP2000_2_IA_WAVE+1) //A相电流波形数据
#define MDP2000_2_IC_WAVE   (MDP2000_2_IB_WAVE+1) //A相电流波形数据
#define MDP2000_2_UA_RMS    (MDP2000_2_IC_WAVE+1) //A相电压有效值
#define MDP2000_2_UB_RMS    (MDP2000_2_UA_RMS+1)  //B相电压有效值
#define MDP2000_2_UC_RMS    (MDP2000_2_UB_RMS+1)  //C相电压有效值
#define MDP2000_2_IA_RMS    (MDP2000_2_UC_RMS+1)  //A相电流有效值
#define MDP2000_2_IB_RMS    (MDP2000_2_IA_RMS+1)  //B相电流有效值
#define MDP2000_2_IC_RMS    (MDP2000_2_IB_RMS+1)  //C相电流有效值
#define MDP2000_2_WhA       (MDP2000_2_IC_RMS+1)  //A相有功功率
#define MDP2000_2_WhB       (MDP2000_2_WhA+1)     //B相有功功率
#define MDP2000_2_WhC       (MDP2000_2_WhB+1)     //C相有功功率
#define MDP2000_2_VarA      (MDP2000_2_WhC+1)     //A相无功功率
#define MDP2000_2_VarB      (MDP2000_2_VarA+1)    //B相无功功率
#define MDP2000_2_VarC      (MDP2000_2_VarB+1)    //C相无功功率
#define MDP2000_2_DVarA     (MDP2000_2_VarC+1)    //A相跨线无功功率
#define MDP2000_2_DVarB     (MDP2000_2_DVarA+1)   //B相跨线无功功率
#define MDP2000_2_DVarC     (MDP2000_2_DVarB+1)   //C相跨线无功功率
#define MDP2000_2_Pha_UA    (MDP2000_2_DVarC+1)   //A相电压相位有功功率
#define MDP2000_2_Pha_UB    (MDP2000_2_Pha_UA+1)  //B相电压相位有功功率
#define MDP2000_2_Pha_UC    (MDP2000_2_Pha_UB+1)  //C相电压相位有功功率
#define MDP2000_2_Pha_IA    (MDP2000_2_Pha_UC+1)  //A相电流相位有功功率
#define MDP2000_2_Pha_IB    (MDP2000_2_Pha_IA+1)  //B相电流相位有功功率
#define MDP2000_2_Pha_IC    (MDP2000_2_Pha_IB+1)  //C相电流相位有功功率
#define MDP2000_2_Fr        (MDP2000_2_Pha_IC+1)  //频率
#define MDP2000_2_Wh_Sum    (MDP2000_2_Fr+1)      //合相有功功率
#define MDP2000_2_Var_Sum   (MDP2000_2_Wh_Sum+1)  //合相无功功率
#define MDP2000_2_DVar_Sum  (MDP2000_2_Var_Sum+1) //合相跨线无功功率
#define MDP2000_2_Ur1       (MDP2000_2_DVar_Sum+1)//电压档位
#define MDP2000_2_Ir1       (MDP2000_2_Ur1+1)     //电流档位
#define MDP2000_2_Jx1       (MDP2000_2_Ir1+1)     //接线方式
#define MDP2000_2_Ur2       (MDP2000_2_Jx1+1)     //电压档位
#define MDP2000_2_Ir2       (MDP2000_2_Ur2+1)     //电流档位
#define MDP2000_2_Jx2       (MDP2000_2_Ir2+1)     //接线方式
//COM3000 系列标准表接收命令索引
#define COM3000_UA_RMS      0                //A相电压有效值
#define COM3000_UB_RMS      (COM3000_UA_RMS+1) //B相电压有效值
#define COM3000_UC_RMS      (COM3000_UB_RMS+1) //C相电压有效值
#define COM3000_IA_RMS      (COM3000_UC_RMS+1) //A相电流有效值
#define COM3000_IB_RMS      (COM3000_IA_RMS+1) //B相电流有效值
#define COM3000_IC_RMS      (COM3000_IB_RMS+1) //C相电流有效值
#define COM3000_WhA         (COM3000_IC_RMS+1) //A相有功功率
#define COM3000_WhB         (COM3000_WhA+1)    //B相有功功率
#define COM3000_WhC         (COM3000_WhB+1)    //C相有功功率
#define COM3000_VarA        (COM3000_WhC+1)    //A相无功功率
#define COM3000_VarB        (COM3000_VarA+1)   //B相无功功率
#define COM3000_VarC        (COM3000_VarB+1)   //C相无功功率
#define COM3000_Pha_UA      (COM3000_VarC+1)   //A相电压相位有功功率
#define COM3000_Pha_UB      (COM3000_Pha_UA+1) //B相电压相位有功功率
#define COM3000_Pha_UC      (COM3000_Pha_UB+1) //C相电压相位有功功率
#define COM3000_Pha_IA      (COM3000_Pha_UC+1) //A相电流相位有功功率
#define COM3000_Pha_IB      (COM3000_Pha_IA+1) //B相电流相位有功功率
#define COM3000_Pha_IC      (COM3000_Pha_IB+1) //C相电流相位有功功率
#define COM3000_Wh_Sum      (COM3000_Pha_IC+1) //合相有功功率
#define COM3000_Var_Sum     (COM3000_Wh_Sum+1) //合相无功功率
#define COM3000_Fr          (COM3000_Var_Sum+1)//频率
#define COM3000_Ur          (COM3000_Fr+1)     //电压档位
#define COM3000_Ir          (COM3000_Ur+1)     //电流档位
#define COM3000_Jx          (COM3000_Ir+1)     //接线方式
/*
#define COM3000_Ur_OK       COM3000_Jx+1)     //电压档位正常
#define COM3000_Ir_OK       COM3000_Ur_OK+1)  //电流档位正常
#define COM3000_Jx_OK       COM3000_Ir_OK+1)  //接线正确
#define COM3000_BR_OK       COM3000_Jx_OK+1)  //波特率正确
#define COM3000_TI_OK       COM3000_BR_OK+1)  //积分正确
#define COM3000_ST_OK       COM3000_TI_OK+1)  //状态读取正常
*/
//K2006 系列标准表接收命令索引
#define K2006_U_RMS         0                //三相电压	               
#define K2006_I_RMS         (K2006_U_RMS+1)    //三相电流                
#define K2006_Wh            (K2006_I_RMS+1)    //三相有功功率	           
#define K2006_Var           (K2006_Wh+1)       //三相无功功率		         
//#define K2006_VA          (  K2006_Var+1)      //三相视在功率            
#define K2006_Pw_Sum        (K2006_Var+1)       //总有功 总无功 总视在    
#define K2006_Fr            (K2006_Pw_Sum+1)   //频率                    
#define K2006_Pha_U         (K2006_Fr+1)       //电压相位	               
#define K2006_Pha_I         (K2006_Pha_U+1)    //电流相位                
#define K2006_CST           (K2006_Pha_I+1)    //常数                    
#define K2006_Ur            (K2006_CST+1)      //电压档位 xxx 三相档位   
#define K2006_Ir            (K2006_Ur+1)       //电流档位 xxx 三相档位   
#define K2006_Jx            (K2006_Ir+1)       //接线方式 P4 P3 ....  
 
//RD33 系列标准表接收命令索引
#define RD33_CST_OK         0                //常数设置正确
#define RD33_CST_BACK       (RD33_CST_OK+1)    //常数设置返回
#define RD33_JX             (RD33_CST_BACK+1)  //接线设置返回 延时值
#define RD33_DATA_BACK      (RD33_JX+1)        //数据查询返回         
                            
#define RD33_RMS_U          0                //三相电压查询
#define RD33_RMS_I          (RD33_RMS_U+1)     //三相电流查询
#define RD33_Wh             (RD33_RMS_I+1)     //三相有功查询
#define RD33_Var            (RD33_Wh+1)        //三相无功查询
#define RD33_DVar           (RD33_Var+1)       //三相跨线无功查询
#define RD33_Fr             (RD33_DVar+1)      //三相频率查询
#define RD33_Pha_U          (RD33_Fr+1)        //三相电压相位查询
#define RD33_Pha_I          (RD33_Pha_U+1)     //三相电流相位查询
/****************************************************************************
* 计算当前电能
****************************************************************************/
void Cal_Energy(void);                               
       
/****************************************************************************
* 计算标准表接收超时时间
* 根据标准表波特率计算
* 默认超过4个字符(20ms---250ms之间)未收到新数据 认为标准表一帧接收完成
****************************************************************************/
extern void Cal_SMtr_Rx_OvTm(void);
/****************************************************************************
* 标准表选择处理
* 标准表改变后 可调用该程序处理
****************************************************************************/
extern void SMtr_Sel_Pr(void);
/****************************************************************************
* 初始化标准表
****************************************************************************/
extern void Init_SMtr(void);
/****************************************************************************
* 标准表无该功能 处理函数
****************************************************************************/
extern u8 SMtr_NO_CMD_Pr(void);  
/****************************************************************************
* 没有波形读取功能处理
****************************************************************************/
extern u8 CANNOT_Read_Wave(void);
/****************************************************************************
* 设置MDP2000自动换挡处理
****************************************************************************/
extern u8 Set_MDP2000_Auto(void);
/****************************************************************************
* 设置MDP2000电压档位处理
****************************************************************************/
extern u8 Set_MDP2000_Ur(void);      
/****************************************************************************
* 设置COM3000电压档位处理
****************************************************************************/
extern u8 Set_COM3000_Ur(void);
/****************************************************************************
* 设置COM3000电流档位处理
****************************************************************************/
extern u8 Set_COM3000_Ir(void);
/****************************************************************************
* 设置MDP1000标准表接线方式处理函数列表
****************************************************************************/
extern u8 Set_MDP1000_Wr(void);       
/****************************************************************************
* 设置MDP2000标准表接线方式处理函数列表
****************************************************************************/
extern u8 Set_MDP2000_Wr(void);       
/****************************************************************************
* 设置COM3000标准表接线方式处理函数列表
****************************************************************************/
extern u8 Set_COM3000_Wr(void);       
/****************************************************************************
* 设置K2006标准表接线方式处理函数列表
****************************************************************************/
extern u8 Set_K2006_Wr(void);         
/****************************************************************************
* 为字符串加校验和
****************************************************************************/
extern void Add_Check_Sum(u8 *Str,u8 Len);
/****************************************************************************
* 计算字符串校验和
****************************************************************************/
extern u16 Cal_Check_Sum(u8 *Str,u8 Len);
/****************************************************************************
* 设置RD33标准表接线方式处理函数列表
****************************************************************************/
extern u8 Set_RD33_Wr(void);                       	
/****************************************************************************
* 设置COM3000标准表自动换挡处理函数列表
****************************************************************************/
extern u8 Set_COM3000_Auto(void);     
/****************************************************************************
* 设置K2006标准表自动换挡处理函数列表
****************************************************************************/
extern u8 Set_K2006_Auto(void);       
/****************************************************************************
* 设置COM3000标准表测量积分时间处理函数列表
****************************************************************************/
extern u8 Set_COM3000_Time(void);     
/****************************************************************************
* 设置K2006标准表测量积分时间处理函数列表
****************************************************************************/
extern u8 Set_K2006_Time(void);       
/****************************************************************************
* 设置K2006标准表脉冲输出类型处理函数列表
****************************************************************************/
extern u8 Set_K2006_PLS(void);        
/****************************************************************************
* 设置MDP1000A标准表常数处理函数列表
****************************************************************************/
extern u8 Set_MDP1000A_CST(void);     
/****************************************************************************
* 设置MDP2000A标准表常数处理函数列表
****************************************************************************/
extern u8 Set_MDP2000A_CST(void);     
/****************************************************************************
* 设置RD33标准表常数处理函数列表
****************************************************************************/
extern u8 Set_RD33_CST(void);                      	
/****************************************************************************
* 设置COM3000标准表电流输入端子处理函数列表
****************************************************************************/
extern u8 Set_COM3000_IIN(void);      
/****************************************************************************
* 设置K2006标准表电流输入端子处理函数列表
****************************************************************************/
extern u8 Set_K2006_IIN(void);        
/****************************************************************************
* 设置COM3000标准表通信波特率处理函数列表
****************************************************************************/
extern u8 Set_COM3000_BR(void);       
/****************************************************************************
* 设置K2006标准表通信波特率处理函数列表
****************************************************************************/
extern u8 Set_K2006_BR(void);         
/****************************************************************************
* 读COM3000标准表状态处理函数列表
****************************************************************************/
extern u8 Read_COM3000_Sts(void);     
/****************************************************************************
* 读K2006标准表状态处理函数列表
****************************************************************************/
extern u8 Read_K2006_Sts(void);       
/****************************************************************************
* 读MDP1000标准表数据处理函数列表
****************************************************************************/
extern u8 Read_MDP1000_Data(void);       
/****************************************************************************
* 读MDP2000标准表数据处理函数列表
****************************************************************************/
extern u8 Read_MDP2000_Data(void);       
/****************************************************************************
* 读COM3000标准表数据处理函数列表
****************************************************************************/
extern u8 Read_COM3000_Data(void);       
/****************************************************************************
* 读K2006标准表数据处理函数列表
****************************************************************************/
extern u8 Read_K2006_Data(void);         
/****************************************************************************
* 读RD33标准表数据处理函数列表
****************************************************************************/
extern u8 Read_RD33_Data(void);           	
/****************************************************************************
* 读MDP1000标准表数据处理函数列表
****************************************************************************/
extern u8 Read_MDP1000_Wave(void);       
/****************************************************************************
* 读MDP2000标准表数据处理函数列表
****************************************************************************/
extern u8 Read_MDP2000_Wave(void);       
/****************************************************************************
* 定时读标准表数据程序
****************************************************************************/
extern void Read_SMtr_Data(void);           
/****************************************************************************
* 定时读标准表状态程序
****************************************************************************/
extern void Read_SMtr_Sts(void);            
/****************************************************************************
* 读标准表波形数据程序
****************************************************************************/
extern void Read_SMtr_Wave(void);
/****************************************************************************
* 标准表改变处理
****************************************************************************/
extern void Proc_SMtr_Change(void);                        
/****************************************************************************
*  处理标准表设置
****************************************************************************/
extern void Proc_SMtr_Set_Cmd(void);        
/****************************************************************************
* 清除当前发送帧
****************************************************************************/
extern void Clear_Current_TFrm(void);
/****************************************************************************
* 清除当前接收帧      
****************************************************************************/
extern void Clear_Current_RFrm(u16 Len1,u16 Len2);          	 	
/****************************************************************************
* MDP1000 MDP1000A标准表接收帧处理程序 
****************************************************************************/
extern void MDP1000_RFrm_Prc(u16 Len1,u16 Len2);         
/****************************************************************************
* MDP2000 MDP2000A标准表接收帧处理程序 
****************************************************************************/
extern void MDP2000_RFrm_Prc(u16 Len1,u16 Len2);         
/****************************************************************************
* MDP2000_2标准表接收帧处理程序 
****************************************************************************/
extern void MDP2000_2_RFrm_Prc(u16 Len1,u16 Len2);       
/****************************************************************************
* COM3000标准表接收帧处理程序 
****************************************************************************/
extern void COM3000_RFrm_Prc(u16 Len1,u16 Len2);         
/****************************************************************************
* K2006标准表接收帧处理程序 
****************************************************************************/
extern void K2006_RFrm_Prc(u16 Len1,u16 Len2);           
/****************************************************************************
* RD33标准表接收帧处理程序 
****************************************************************************/
extern void RD33_RFrm_Prc(u16 Len1,u16 Len2);                       	
/****************************************************************************
* TI浮点数 转换成 IEEE浮点数 
****************************************************************************/
extern void TI_To_IEEE_Float(u8 *Ptr);
/****************************************************************************
* IEEE浮点数 转换成 TI浮点数 
* 返回 1 转换正常 数据存入 *Str 0 数据错误
* Float_Tp 存放要转换的浮点数
****************************************************************************/
extern void IEEE_To_TI_Float(u8 *Ptr);

/****************************************************************************
* 标准表高频常数设置正确处理 
****************************************************************************/
extern void Set_RD33_FH_OK(void);
/****************************************************************************
* 常数设置返回处理 
****************************************************************************/
extern void Rcv_RD33_Fh_Pr(void);                
/****************************************************************************
* 接线设置返回处理 延时值 
****************************************************************************/
extern void Rcv_RD33_Jx_Pr(void);             
/****************************************************************************
* 测量数据返回处理 
****************************************************************************/
extern void Rcv_RD33_Data_Pr(void);                
/****************************************************************************
* 保存三相电压 
****************************************************************************/
extern void Save_RD33_U_Rms(float *f);     
/****************************************************************************
* 保存三相电流 
****************************************************************************/
extern void Save_RD33_I_Rms(float *f);     
/****************************************************************************
* 三相有功 
****************************************************************************/
extern void Save_RD33_Wh(float *f);        
/****************************************************************************
* 三相无功 
****************************************************************************/
extern void Save_RD33_Var(float *f);       
/****************************************************************************
* 三相跨线无功 
****************************************************************************/
extern void Save_RD33_DVar(float *f);      
/****************************************************************************
* 三相频率
****************************************************************************/
extern void Save_RD33_Fr(float *f);        
/****************************************************************************
* 三相电压相位
****************************************************************************/
extern void Save_RD33_Pha_U(float *f);     
/****************************************************************************
* 三相电流相位
****************************************************************************/
extern void Save_RD33_Pha_I(float *f);     
/****************************************************************************
* 清除一条命令
* SMtr_Cmd_End[] 命令结束标志表格
* 命令结束符 比较个数 
* 至少一种
****************************************************************************/
void Clear_One_Cmd(const u8 *Str,u8 Len);
/****************************************************************************
* 读数据索引加1处理
****************************************************************************/
extern void Rdata_Index_Add_One(void);
/****************************************************************************
* 字符串拷贝 将Str1 拷贝到Str2中
* Str1 待拷贝的字符串
* Str2 待写入的字符串
* Len Str2 最大长度
****************************************************************************/
void Fill_Space_StrCpy(u8 *Str1,u8 *Str2,u8 Len);
/****************************************************************************
* K2006 返回电压处理 
****************************************************************************/
extern void K2006_U_Pr(void);       
/****************************************************************************
* 检测帧结束符是否正确
****************************************************************************/
extern void Check_RFrm_End(void);
/****************************************************************************
* K2006 返回电压处理 
****************************************************************************/
extern void K2006_U_Pr(void);
/****************************************************************************
* K2006 返回电流处理 
****************************************************************************/
extern void K2006_I_Pr(void); 
/****************************************************************************
* K2006 返回三相有功功率处理 
****************************************************************************/
extern void K2006_Wh_Pr(void);   	           
/****************************************************************************
* K2006 返回三相无功功率处理 
****************************************************************************/
extern void K2006_Var_Pr(void);   		         
/****************************************************************************
* K2006 返回总有功 总无功 总视在 处理 
****************************************************************************/
extern void K2006_Pw_Sum_Pr(void);      
/****************************************************************************
* K2006 返回频率处理 
****************************************************************************/
extern void K2006_Fr_Pr(void);                      
/****************************************************************************
* K2006 返回电压相位处理 
****************************************************************************/
extern void K2006_Pha_U_Pr(void);  	               
/****************************************************************************
* K2006 返回电流相位处理 
****************************************************************************/
extern void K2006_Pha_I_Pr(void);                
/****************************************************************************
* K2006 返回常数处理 
****************************************************************************/
extern void K2006_Cst_Pr(void);                       
/****************************************************************************
* 计算台体实际高频常数
****************************************************************************/
extern void Cal_Act_FH(void);                    
/****************************************************************************
* COM3000电压有效值处理程序 
****************************************************************************/
extern void COM3003_U_Pr(u8 Pha);
/****************************************************************************
* COM3000电流有效值处理程序 
****************************************************************************/
extern void COM3003_I_Pr(u8 Pha);     
/****************************************************************************
* COM3000有功功率处理程序 
****************************************************************************/
extern void COM3003_Wh_Pr(u8 Pha);    
/****************************************************************************
* COM3000无功功率处理程序 
****************************************************************************/
extern void COM3003_Var_Pr(u8 Pha);   
/****************************************************************************
* COM3000相位处理程序 
****************************************************************************/
extern void COM3003_Pha_Pr(u8 Pha);   
/****************************************************************************
* COM3000频率处理程序 
****************************************************************************/
extern void COM3003_Fr_Pr(void);       
/****************************************************************************
* COM3000电压档位处理程序 
****************************************************************************/
extern void COM3003_Ur_Pr(void);       
/****************************************************************************
* COM3000电流档位处理程序 
****************************************************************************/
extern void COM3003_Ir_Pr(void);       
/****************************************************************************
* COM3000接线方式处理程序 
****************************************************************************/
extern void COM3003_Jx_Pr(void);       
/****************************************************************************
* 判断是否为有效数字
* 无效数字 返回该字符 否则返回0
****************************************************************************/
extern u8 Check_Valid_Numeric(u8 c);
/****************************************************************************
* 接收处理指针加1处理
****************************************************************************/
extern void RFrm_ITail_Add_One(void);
/****************************************************************************
* 波形数据处理
****************************************************************************/
extern void Wave_Dara_Pr(u8 Phase);
/****************************************************************************
* 电压有效值数据处理
****************************************************************************/
extern void MDP_U_Pr(u8 Phase);
/****************************************************************************
* 电流有效值数据处理
****************************************************************************/
extern void MDP_I_Pr(u8 Phase);     
/****************************************************************************
* 有功功率数据处理
****************************************************************************/
extern void MDP_Wh_Pr(u8 Phase);     
/****************************************************************************
* 无功功率数据处理
****************************************************************************/
extern void MDP_Var_Pr(u8 Phase);    
/****************************************************************************
* 跨线无功功率数据处理
****************************************************************************/
extern void MDP_DVar_Pr(u8 Phase);   
/****************************************************************************
* 相位数据处理
****************************************************************************/
extern void MDP_Pha_Pr(u8 Phase);    
/****************************************************************************
* 频率数据处理
****************************************************************************/
extern void MDP_Fr_Pr(void);       
/****************************************************************************
* 电压档位数据处理
****************************************************************************/
extern void MDP_Ur_Pr(void);        
/****************************************************************************
* 电流档位数据处理
****************************************************************************/
extern void MDP_Ir_Pr(void);        
/****************************************************************************
* 接线方式数据处理
****************************************************************************/
extern void MDP_Jx_Pr(void);        
/****************************************************************************
* 从标准表接收缓冲区发送数据命令到电源端口缓冲区
* Str1 命令头地址 
* 自动修改指针 
* 为了节省时间 单独发送 主要发送波形数据
****************************************************************************/
extern void Copy_SMtr_IBuf_To_Power_OBuf(u8 *Str1);
/****************************************************************************
* MDP1000窄量程标准表 高频常数计算
****************************************************************************/
extern u8 MDP1000_FH_Pr(void);
/****************************************************************************
* MDP1000A宽量程标准表   高频常数计算
****************************************************************************/
extern u8 MDP1000A_FH_Pr(void);
/****************************************************************************
*单相宽量程 高频常数计算
****************************************************************************/
extern u8 RM11_FH_Pr(void);
/****************************************************************************
* MDP2000窄量程标准表 高频常数计算
****************************************************************************/
extern u8 MDP2000_FH_Pr(void);
/****************************************************************************
* MDP2000_2窄量程标准表 高频常数计算
****************************************************************************/
extern u8 MDP2000_2_FH_Pr(void);
/****************************************************************************
* MDP2000A宽量程标准表 高频常数计算
****************************************************************************/
extern u8 MDP2000A_FH_Pr(void);
/****************************************************************************
* MDP2002A宽量程标准表 高频常数计算
****************************************************************************/
extern u8 MDP2002A_FH_Pr(void);
/****************************************************************************
* COM3000宽量程标准表 高频常数计算
****************************************************************************/
extern u8 COM3000_FH_Pr(void);
/****************************************************************************
* K2006宽量程标准表   高频常数计算
****************************************************************************/
extern u8 K2006_FH_Pr(void);
/****************************************************************************
* MDP1000窄量程标准表 高频常数计算
****************************************************************************/
extern u8 RD33_FH_Pr(void);
/****************************************************************************
* 检测标准表是否存在程序
****************************************************************************/
extern void Proc_Check_SMTR(void);
/****************************************************************************
* 虚拟电压回送
* 检测不到标准表时,上位机控制电压输出10S后回送电压设定值(虚拟)
****************************************************************************/
extern void Proc_Dummy_Voltage(void);
/****************************************************************************
* 字符串发送
* 入口: Str 要发送的数据
* 入口: Len 要发送数据的长度
        当Len=0时  按字符串发送 直到遇到结束符'\0' '\r' 0xff
        当Len!=0时 直接发送Len长度个字符
* 标准表数据 暂不用该程序发送
* 该子程序将数据发送到数据发送缓冲区
****************************************************************************/
void SendStr(u8 Buf_Id,u8 *Str,u8 Len);
/****************************************************************************
* 发送一串口数据帧到发送FIFO
* 出口: 0 缓冲区 UART FIFO 都空          BUF_FIFO_BLK
*       1 缓冲区 UART FIFO 至少一个不空  BUF_FIFO_NBLK
****************************************************************************/
u8 Send_One_Uart_Frm(u8 Buf);
/****************************************************************************
* 串口处理程序:找出一个指令头字符串在一个指令表数组字符串中的序号
* 返回在命令表格中对应的序号
****************************************************************************/
u16 Case_num(u8 Buf_Id);
/****************************************************************************
* 从接收缓冲区中取出参数
****************************************************************************/
u8 Get_Para(u8 Buf_Id,u8 m);
/****************************************************************************
* 从接收缓冲区取一条指令
****************************************************************************/
void Get_Com_Cmd(u8 Buf_Id);   
/****************************************************************************
* 没有匹配命令处理
* 人口:Buf_Id 缓冲区编号 
* 本程序不适用于 长数据端口缓冲区
* 长数据端口缓冲区清除 请用 Clear_Ldata()函数
****************************************************************************/
void No_Match_Cmd_Pr(u8 Buf_Id);
/****************************************************************************
* 标准表帧发送缓冲区 加1处理
****************************************************************************/
void SMtr_TFrm_OHead_ADD_ONE(void);
/****************************************************************************
* 标准表发送帧加1处理
****************************************************************************/
void SMtr_TFrm_OTail_ADD_ONE(void);
/****************************************************************************
* 发送一标准表数据帧到发送FIFO
* 出口: 0 缓冲区 UART FIFO 都空          BUF_FIFO_BLK
*       1 缓冲区 UART FIFO 至少一个不空  BUF_FIFO_NBLK
****************************************************************************/
u8 Send_One_SMtrFrm(void);
/****************************************************************************
* 处理标准表发送缓冲区
****************************************************************************/
extern void Proc_SMtr_OBuf(void);           
/****************************************************************************
* 处理标准表接收缓冲区
****************************************************************************/
extern void Proc_SMtr_IBuf(void);                     
/****************************************************************************
* 标准表接收超时处理 
****************************************************************************/
extern void Proc_SMtr_Rx_OverTime(void);    
/****************************************************************************
* 标准表发送超时处理 
****************************************************************************/
extern void Proc_SMtr_Tx_OverTime(void);
