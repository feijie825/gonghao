; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--debug -c --asm --interleave -odisp.o --depend=disp.d --feedback=DISP.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\Luminary -D__MICROLIB Disp.C]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Reset_HD7279 PROC
;;;15     *****************************************************************************/
;;;16     void Reset_HD7279(void)
000000  b570              PUSH     {r4-r6,lr}
;;;17     {
;;;18         SSIDataLen(SSI0,SSI_CR0_DSS_8);	      //设置数据长度为8bit
000002  4c75              LDR      r4,|L1.472|
000004  2107              MOVS     r1,#7
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       SSIDataLen
;;;19         GPIOPinWrite(GPIOA,DISP_RST,0);       //复位管脚置0
00000c  f04f2540          MOV      r5,#0x40004000
000010  2200              MOVS     r2,#0
000012  2110              MOVS     r1,#0x10
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       GPIOPinWrite
;;;20         SysCtlDelay(625);                     //每个数延时160ns  延时100us
00001a  f2402071          MOV      r0,#0x271
00001e  f7fffffe          BL       SysCtlDelay
;;;21         GPIOPinWrite(GPIOA,DISP_RST,DISP_RST);//复位管脚置1
000022  2210              MOVS     r2,#0x10
000024  4611              MOV      r1,r2
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GPIOPinWrite
;;;22         SysCtlDelay(6250);                    //每个数延时160ns  延时1mS
00002c  f641006a          MOV      r0,#0x186a
000030  f7fffffe          BL       SysCtlDelay
;;;23         SSIDataPut(SSI0,LED_RESET);           //送数据  
000034  21a4              MOVS     r1,#0xa4
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       SSIDataPut
;;;24         SysCtlDelay(62500);                   //每个数延时160ns  延时10mS
00003c  e8bd4070          POP      {r4-r6,lr}
000040  f24f4024          MOV      r0,#0xf424
000044  f7ffbffe          B.W      SysCtlDelay
;;;25     //    Disp_Data(Disp_Code_Mode);            //复位并显示 按方式0译码(与原误差板译码方式相同     
;;;26     }
;;;27     /*****************************************************************************
                          ENDP

                  Disp_Data PROC
;;;44     *****************************************************************************/
;;;45     void Disp_Data(u8 Disp_Mode)
000048  e92d41f0          PUSH     {r4-r8,lr}
;;;46     {
00004c  4605              MOV      r5,r0
;;;47         u8 m;
;;;48         u16 t;
;;;49         SSIDataLen(SSI0,SSI_CR0_DSS_16);	  //设置数据长度为8bit
00004e  4f62              LDR      r7,|L1.472|
000050  210f              MOVS     r1,#0xf
000052  4638              MOV      r0,r7
000054  f7fffffe          BL       SSIDataLen
;;;50         for(m=0;m<8;m++)
000058  2400              MOVS     r4,#0
;;;51          {
;;;52           t=((Disp_Mode|m)<<8);
;;;53           if(Disp_Mode==LED_SEND_DATA_CODE2)
;;;54            {
;;;55             if((Disp_Buf[m]&0x7f)<sizeof(Disp_Code_Tab))
00005a  4e60              LDR      r6,|L1.476|
                  |L1.92|
00005c  ea450004          ORR      r0,r5,r4              ;52
000060  0200              LSLS     r0,r0,#8              ;52
000062  2d90              CMP      r5,#0x90              ;53
000064  d10b              BNE      |L1.126|
000066  5d31              LDRB     r1,[r6,r4]
000068  f001027f          AND      r2,r1,#0x7f
00006c  2a1e              CMP      r2,#0x1e
00006e  d202              BCS      |L1.118|
;;;56              t|=Disp_Code_Tab[Disp_Buf[m]&0x7f];
000070  4b5b              LDR      r3,|L1.480|
000072  5c9a              LDRB     r2,[r3,r2]
000074  4310              ORRS     r0,r0,r2
                  |L1.118|
;;;57             else
;;;58              t|=Disp_Code_Tab[DISP_BLANK];
;;;59             t|=(Disp_Buf[m]&0x80);         //判断是否有小数点
000076  f0010180          AND      r1,r1,#0x80
00007a  4301              ORRS     r1,r1,r0
00007c  e001              B        |L1.130|
                  |L1.126|
;;;60            }
;;;61           else    
;;;62            t|=Disp_Buf[m];
00007e  5d31              LDRB     r1,[r6,r4]
000080  4301              ORRS     r1,r1,r0
                  |L1.130|
;;;63           SSIDataPut(SSI0,t);
000082  4638              MOV      r0,r7
000084  f7fffffe          BL       SSIDataPut
000088  1c64              ADDS     r4,r4,#1              ;50
00008a  b2e4              UXTB     r4,r4                 ;50
00008c  2c08              CMP      r4,#8                 ;50
00008e  d3e5              BCC      |L1.92|
;;;64          }
;;;65     }
000090  e8bd81f0          POP      {r4-r8,pc}
;;;66     /*****************************************************************************
                          ENDP

                  Update_N_Buf PROC
;;;69     *****************************************************************************/
;;;70     void Update_N_Buf(void)
000094  4853              LDR      r0,|L1.484|
;;;71     {
;;;72         u8 m=CURRENT_N;                      //当前圈数
000096  7802              LDRB     r2,[r0,#0]  ; CURRENT_N
;;;73         Disp_Buf[1]=m%10;                    //圈数最低位
000098  210a              MOVS     r1,#0xa
00009a  fbb2f0f1          UDIV     r0,r2,r1
00009e  fb012310          MLS      r3,r1,r0,r2
0000a2  4a4e              LDR      r2,|L1.476|
0000a4  7053              STRB     r3,[r2,#1]
;;;74         m/=10;                               //圈数高位
;;;75         if(m>9)                              //判断当前圈数是否超过100
0000a6  2809              CMP      r0,#9
0000a8  d903              BLS      |L1.178|
;;;76          m%=10;                              //
0000aa  fbb0f3f1          UDIV     r3,r0,r1
0000ae  fb010013          MLS      r0,r1,r3,r0
                  |L1.178|
;;;77         Disp_Buf[0]=m;                       //圈数高位
0000b2  7010              STRB     r0,[r2,#0]
;;;78         CURRENT_N_ASC[0]=m|'0';              //圈数高位
0000b4  f0400130          ORR      r1,r0,#0x30
0000b8  484b              LDR      r0,|L1.488|
0000ba  7001              STRB     r1,[r0,#0]
;;;79         CURRENT_N_ASC[1]=Disp_Buf[1]|'0';    //圈数低位
0000bc  7851              LDRB     r1,[r2,#1]  ; Disp_Buf
0000be  f0410130          ORR      r1,r1,#0x30
0000c2  7041              STRB     r1,[r0,#1]
;;;80     }
0000c4  4770              BX       lr
;;;81     /*****************************************************************************
                          ENDP

                  Update_Mtr_Num PROC
;;;83     *****************************************************************************/
;;;84     void Update_Mtr_Num(void)
0000c6  4849              LDR      r0,|L1.492|
;;;85     {					   
;;;86         u8 m=Mtr_Numb_ID;                  //表位号
0000c8  7800              LDRB     r0,[r0,#0]  ; Mtr_Numb_ID
;;;87         Disp_Buf[7]=m%10;                  //表位号最低位
0000ca  210a              MOVS     r1,#0xa
0000cc  fbb0f2f1          UDIV     r2,r0,r1
0000d0  fb010012          MLS      r0,r1,r2,r0
0000d4  4b41              LDR      r3,|L1.476|
0000d6  71d8              STRB     r0,[r3,#7]
;;;88         m/=10;
;;;89         Disp_Buf[6]=m%10;                  //表位号高位
0000d8  fbb2f0f1          UDIV     r0,r2,r1
0000dc  fb012210          MLS      r2,r1,r0,r2
0000e0  719a              STRB     r2,[r3,#6]
;;;90         m/=10;
;;;91         if(m!=0)
0000e2  b128              CBZ      r0,|L1.240|
;;;92          Disp_Buf[5]=m%10;                 //表位号最高位
0000e4  fbb0f2f1          UDIV     r2,r0,r1
0000e8  fb010012          MLS      r0,r1,r2,r0
0000ec  7158              STRB     r0,[r3,#5]
;;;93         else                         
;;;94          Disp_Buf[5]=DISP_BLANK;           //表位号最高位
;;;95     }
0000ee  4770              BX       lr
                  |L1.240|
0000f0  2015              MOVS     r0,#0x15              ;94
0000f2  7158              STRB     r0,[r3,#5]            ;94
0000f4  4770              BX       lr
;;;96     /*****************************************************************************
                          ENDP

                  Copy_Str_To_DSBUF PROC
;;;101    *****************************************************************************/
;;;102    void Copy_Str_To_DSBUF(u8 Len,u8 Offset,u8 *Ptr)
0000f6  b570              PUSH     {r4-r6,lr}
;;;103    {
;;;104        u8 m,n=Offset,d;
0000f8  460b              MOV      r3,r1
;;;105        for(m=0;(m<Len&&n<8);m++,n++)       //循环处理显示
0000fa  2500              MOVS     r5,#0
;;;106         {
;;;107          if(Ptr[m]!='.')                   //判断是否为小数点
;;;108           {                                
;;;109            if((Ptr[m]==' ')||              //是否为空格
;;;110               (Ptr[m]=='\0')||             //字符串结束  
;;;111               (Ptr[m]=='+'))               //是否为'+'
;;;112             d=DISP_BLANK;                   //不显示
;;;113            else if(Ptr[m]=='-')            //负号
;;;114             d=DISP_MINUS;                   //'-'
;;;115            else if(Ptr[m]=='H')            //
;;;116             d=DISP_H;                      //显示'H'
;;;117            else if(Ptr[m]=='L')
;;;118             d=DISP_L;                      //显示'L'
;;;119            else                         
;;;120             d=Ptr[m]-'0';                  //ASC变为
;;;121            Disp_Buf[n]=d;
0000fc  4e37              LDR      r6,|L1.476|
0000fe  e02f              B        |L1.352|
                  |L1.256|
000100  5d54              LDRB     r4,[r2,r5]            ;107
000102  2c2e              CMP      r4,#0x2e              ;107
000104  d016              BEQ      |L1.308|
000106  2c20              CMP      r4,#0x20              ;109
000108  d002              BEQ      |L1.272|
00010a  b10c              CBZ      r4,|L1.272|
00010c  2c2b              CMP      r4,#0x2b              ;111
00010e  d101              BNE      |L1.276|
                  |L1.272|
000110  2415              MOVS     r4,#0x15              ;112
000112  e00d              B        |L1.304|
                  |L1.276|
000114  2c2d              CMP      r4,#0x2d              ;113
000116  d101              BNE      |L1.284|
000118  2414              MOVS     r4,#0x14              ;114
00011a  e009              B        |L1.304|
                  |L1.284|
00011c  2c48              CMP      r4,#0x48              ;115
00011e  d101              BNE      |L1.292|
000120  2411              MOVS     r4,#0x11              ;116
000122  e005              B        |L1.304|
                  |L1.292|
000124  2c4c              CMP      r4,#0x4c              ;117
000126  d101              BNE      |L1.300|
000128  2412              MOVS     r4,#0x12              ;118
00012a  e001              B        |L1.304|
                  |L1.300|
00012c  3c30              SUBS     r4,r4,#0x30           ;120
00012e  b2e4              UXTB     r4,r4                 ;120
                  |L1.304|
000130  54f4              STRB     r4,[r6,r3]
000132  e011              B        |L1.344|
                  |L1.308|
;;;122           }
;;;123          else                              //小数点处理
;;;124           {                                
;;;125            if(n==Offset)                   
000134  428b              CMP      r3,r1
000136  d105              BNE      |L1.324|
;;;126             {                              
;;;127              Disp_Buf[2]=0x80;             //显示小数点
000138  f04f0380          MOV      r3,#0x80
00013c  70b3              STRB     r3,[r6,#2]
;;;128              n=3;                          
00013e  f04f0303          MOV      r3,#3
000142  e009              B        |L1.344|
                  |L1.324|
;;;129             }                              
;;;130            else                            
;;;131             {                              
;;;132              if(n>Offset)                  
000144  d903              BLS      |L1.334|
;;;133               n--;                         //回到上个字符
000146  f1a30301          SUB      r3,r3,#1
00014a  b2db              UXTB     r3,r3
00014c  e000              B        |L1.336|
                  |L1.334|
;;;134              else                          
;;;135               n=Offset;                    // 
00014e  460b              MOV      r3,r1
                  |L1.336|
;;;136              Disp_Buf[n]|=0x80;            //显示小数点
000150  5cf4              LDRB     r4,[r6,r3]
000152  f0440480          ORR      r4,r4,#0x80
000156  54f4              STRB     r4,[r6,r3]
                  |L1.344|
000158  1c6d              ADDS     r5,r5,#1              ;105
00015a  b2ed              UXTB     r5,r5                 ;105
00015c  1c5b              ADDS     r3,r3,#1              ;105
00015e  b2db              UXTB     r3,r3                 ;105
                  |L1.352|
000160  4285              CMP      r5,r0                 ;105
000162  d201              BCS      |L1.360|
000164  2b08              CMP      r3,#8                 ;105
000166  d3cb              BCC      |L1.256|
                  |L1.360|
;;;137             } 
;;;138           }
;;;139         }
;;;140    } 
000168  bd70              POP      {r4-r6,pc}
;;;141    /*****************************************************************************
                          ENDP

                  Disp_Long_Data PROC
;;;147    *****************************************************************************/
;;;148    void Disp_Long_Data(u8 Len,u8 Addr,u32 Data,u8 Sts)
00016a  b4f0              PUSH     {r4-r7}
;;;149    {
;;;150        u8 m;
;;;151        if(Addr==0)
00016c  2900              CMP      r1,#0
00016e  d025              BEQ      |L1.444|
;;;152         return;
;;;153        Addr--; 
000170  1e49              SUBS     r1,r1,#1
000172  b2c9              UXTB     r1,r1
;;;154        for(m=0;m<Len;m++)
000174  2400              MOVS     r4,#0
;;;155         {
;;;156          Disp_Buf[Addr]=Data%10;          //转化成十进制BCD码
000176  4f19              LDR      r7,|L1.476|
000178  260a              MOVS     r6,#0xa
00017a  e00b              B        |L1.404|
                  |L1.380|
00017c  4615              MOV      r5,r2
00017e  fbb2f2f6          UDIV     r2,r2,r6
000182  fb065512          MLS      r5,r6,r2,r5
000186  547d              STRB     r5,[r7,r1]
;;;157          Data/=10;                        //去掉低位
;;;158          if((Addr==0)||(Data==0))         
000188  b131              CBZ      r1,|L1.408|
00018a  b12a              CBZ      r2,|L1.408|
;;;159           break;
;;;160          Addr--;
00018c  1e49              SUBS     r1,r1,#1
00018e  b2c9              UXTB     r1,r1
000190  1c64              ADDS     r4,r4,#1              ;154
000192  b2e4              UXTB     r4,r4                 ;154
                  |L1.404|
000194  4284              CMP      r4,r0                 ;154
000196  d3f1              BCC      |L1.380|
                  |L1.408|
;;;161         }
;;;162       for(;m<Len;m++)
;;;163        {
;;;164         if(Addr==0)
;;;165          break;
;;;166         Addr--; 
;;;167         if(Sts)
;;;168          Disp_Buf[Addr]=DISP_BLANK;        //不显示
000198  2215              MOVS     r2,#0x15
00019a  2500              MOVS     r5,#0                 ;149
00019c  e008              B        |L1.432|
                  |L1.414|
00019e  b149              CBZ      r1,|L1.436|
0001a0  1e49              SUBS     r1,r1,#1              ;166
0001a2  b2c9              UXTB     r1,r1                 ;166
0001a4  b10b              CBZ      r3,|L1.426|
0001a6  547a              STRB     r2,[r7,r1]
0001a8  e000              B        |L1.428|
                  |L1.426|
;;;169         else
;;;170          Disp_Buf[Addr]=0;                //显示0
0001aa  547d              STRB     r5,[r7,r1]
                  |L1.428|
0001ac  1c64              ADDS     r4,r4,#1              ;162
0001ae  b2e4              UXTB     r4,r4                 ;162
                  |L1.432|
0001b0  4284              CMP      r4,r0                 ;162
0001b2  d3f4              BCC      |L1.414|
                  |L1.436|
;;;171        } 
;;;172       Disp_Data(Disp_Code_Mode);          //按方式0译码(与原误差板译码方式相同)      
0001b4  480e              LDR      r0,|L1.496|
0001b6  7800              LDRB     r0,[r0,#0]  ; Disp_Code_Mode
0001b8  bcf0              POP      {r4-r7}
0001ba  e7fe              B        Disp_Data
                  |L1.444|
;;;173    }
0001bc  bcf0              POP      {r4-r7}
0001be  4770              BX       lr
;;;174    /*****************************************************************************
                          ENDP

                  Disp_Time_Pr PROC
;;;176    *****************************************************************************/
;;;177    void Disp_Time_Pr(void)
0001c0  480c              LDR      r0,|L1.500|
;;;178    {
;;;179        if((Timer_1ms-Disp_Timer)<DISP_TIME)//判断显示定时是否到
0001c2  490d              LDR      r1,|L1.504|
0001c4  6800              LDR      r0,[r0,#0]  ; Timer_1ms
0001c6  680a              LDR      r2,[r1,#0]  ; Disp_Timer
0001c8  1a82              SUBS     r2,r0,r2
0001ca  2ac8              CMP      r2,#0xc8
0001cc  db03              BLT      |L1.470|
;;;180         return;                            //不到 退出
;;;181        Disp_Timer=Timer_1ms;               //刷新显示定时器
0001ce  6008              STR      r0,[r1,#0]  ; Disp_Timer
;;;182        Disp_Data(Disp_Code_Mode);          //复位并显示 按方式0译码(与原误差板译码方式相同     
0001d0  4807              LDR      r0,|L1.496|
0001d2  7800              LDRB     r0,[r0,#0]  ; Disp_Code_Mode
0001d4  e7fe              B        Disp_Data
                  |L1.470|
;;;183    }            
0001d6  4770              BX       lr
;;;184    
                          ENDP

                  |L1.472|
                          DCD      0x40008000
                  |L1.476|
                          DCD      Disp_Buf
                  |L1.480|
                          DCD      ||.constdata||
                  |L1.484|
                          DCD      CURRENT_N
                  |L1.488|
                          DCD      CURRENT_N_ASC
                  |L1.492|
                          DCD      Mtr_Numb_ID
                  |L1.496|
                          DCD      Disp_Code_Mode
                  |L1.500|
                          DCD      Timer_1ms
                  |L1.504|
                          DCD      Disp_Timer

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  Disp_Code_Tab
000000  7e306d79          DCB      0x7e,0x30,0x6d,0x79
000004  335b5f70          DCB      0x33,0x5b,0x5f,0x70
000008  7f7b777f          DCB      0x7f,0x7b,0x77,0x7f
00000c  4e7e4f47          DCB      0x4e,0x7e,0x4f,0x47
000010  7b370e77          DCB      0x7b,0x37,0x0e,0x77
000014  01001f3d          DCB      0x01,0x00,0x1f,0x3d
000018  3e0f151d          DCB      0x3e,0x0f,0x15,0x1d
00001c  6776              DCB      0x67,0x76
