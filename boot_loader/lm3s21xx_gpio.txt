; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--debug -c --asm --interleave -olm3s21xx_gpio.o --depend=lm3s21xx_gpio.d --feedback=bootloader.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\Luminary -D__MICROLIB --omf_browse=lm3s21xx_gpio.crf LM3S21xx_gpio.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GPIOPadConfigSet PROC
;;;56     *****************************************************************************/
;;;57     u32 GPIODirModeGet(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b510              PUSH     {r4,lr}
;;;58     {
;;;59         u32 ulDir, ulAFSEL;
;;;60     
;;;61         ASSERT(GPIOBaseValid(GPIOx));
;;;62     
;;;63         ulDir = GPIOx->DIR;
000002  07d4              LSLS     r4,r2,#31
;;;64         ulAFSEL = GPIOx->AFSEL;
000004  d003              BEQ      |L1.14|
000006  f8d04500          LDR      r4,[r0,#0x500]
;;;65         return(((ulDir & ucPins) ? 1 : 0) | ((ulAFSEL & ucPins) ? 2 : 0));
00000a  430c              ORRS     r4,r4,r1
00000c  e002              B        |L1.20|
                  |L1.14|
00000e  f8d04500          LDR      r4,[r0,#0x500]
000012  438c              BICS     r4,r4,r1
                  |L1.20|
000014  f8c04500          STR      r4,[r0,#0x500]
000018  0794              LSLS     r4,r2,#30
00001a  d503              BPL      |L1.36|
00001c  f8d04504          LDR      r4,[r0,#0x504]
;;;66     }
000020  430c              ORRS     r4,r4,r1
000022  e002              B        |L1.42|
                  |L1.36|
000024  f8d04504          LDR      r4,[r0,#0x504]
000028  438c              BICS     r4,r4,r1
                  |L1.42|
00002a  f8c04504          STR      r4,[r0,#0x504]
00002e  0754              LSLS     r4,r2,#29
000030  d503              BPL      |L1.58|
000032  f8d04508          LDR      r4,[r0,#0x508]
000036  430c              ORRS     r4,r4,r1
000038  e002              B        |L1.64|
                  |L1.58|
00003a  f8d04508          LDR      r4,[r0,#0x508]
00003e  438c              BICS     r4,r4,r1
                  |L1.64|
000040  f8c04508          STR      r4,[r0,#0x508]
000044  0712              LSLS     r2,r2,#28
000046  d503              BPL      |L1.80|
000048  f8d02518          LDR      r2,[r0,#0x518]
00004c  430a              ORRS     r2,r2,r1
00004e  e002              B        |L1.86|
                  |L1.80|
000050  f8d02518          LDR      r2,[r0,#0x518]
000054  438a              BICS     r2,r2,r1
                  |L1.86|
000056  f8c02518          STR      r2,[r0,#0x518]
00005a  07da              LSLS     r2,r3,#31
00005c  d003              BEQ      |L1.102|
00005e  f8d0250c          LDR      r2,[r0,#0x50c]
000062  430a              ORRS     r2,r2,r1
000064  e002              B        |L1.108|
                  |L1.102|
000066  f8d0250c          LDR      r2,[r0,#0x50c]
00006a  438a              BICS     r2,r2,r1
                  |L1.108|
00006c  f8c0250c          STR      r2,[r0,#0x50c]
000070  079a              LSLS     r2,r3,#30
000072  d503              BPL      |L1.124|
000074  f8d02510          LDR      r2,[r0,#0x510]
000078  430a              ORRS     r2,r2,r1
00007a  e002              B        |L1.130|
                  |L1.124|
00007c  f8d02510          LDR      r2,[r0,#0x510]
000080  438a              BICS     r2,r2,r1
                  |L1.130|
000082  f8c02510          STR      r2,[r0,#0x510]
000086  075a              LSLS     r2,r3,#29
000088  d503              BPL      |L1.146|
00008a  f8d02514          LDR      r2,[r0,#0x514]
00008e  430a              ORRS     r2,r2,r1
000090  e002              B        |L1.152|
                  |L1.146|
000092  f8d02514          LDR      r2,[r0,#0x514]
000096  438a              BICS     r2,r2,r1
                  |L1.152|
000098  f8c02514          STR      r2,[r0,#0x514]
00009c  071a              LSLS     r2,r3,#28
00009e  d503              BPL      |L1.168|
0000a0  f8d0251c          LDR      r2,[r0,#0x51c]
0000a4  430a              ORRS     r2,r2,r1
0000a6  e002              B        |L1.174|
                  |L1.168|
0000a8  f8d0251c          LDR      r2,[r0,#0x51c]
0000ac  438a              BICS     r2,r2,r1
                  |L1.174|
0000ae  f8c0251c          STR      r2,[r0,#0x51c]
0000b2  b91b              CBNZ     r3,|L1.188|
0000b4  f8d02528          LDR      r2,[r0,#0x528]
0000b8  430a              ORRS     r2,r2,r1
0000ba  e002              B        |L1.194|
                  |L1.188|
0000bc  f8d02528          LDR      r2,[r0,#0x528]
0000c0  438a              BICS     r2,r2,r1
                  |L1.194|
0000c2  f8c02528          STR      r2,[r0,#0x528]
0000c6  bd10              POP      {r4,pc}
;;;67     
                          ENDP

                  GPIODirModeSet PROC
;;;39     *****************************************************************************/
;;;40     void GPIODirModeSet(GPIO_Typedef *GPIOx, u8 ucPins,u32 ulPinIO)
0000c8  07d3              LSLS     r3,r2,#31
;;;41     {
;;;42         ASSERT((ulPinIO == GPIO_DIR_MODE_IN) || (ulPinIO == GPIO_DIR_MODE_OUT) ||
;;;43                (ulPinIO == GPIO_DIR_MODE_HW));
;;;44     
;;;45         GPIOx->DIR = ((ulPinIO & 1) ? (GPIOx->DIR | ucPins) :          //输出
0000ca  d003              BEQ      |L1.212|
0000cc  f8d03400          LDR      r3,[r0,#0x400]
0000d0  430b              ORRS     r3,r3,r1
0000d2  e002              B        |L1.218|
                  |L1.212|
;;;46                                       (GPIOx->DIR & ~(ucPins)));       //输入
0000d4  f8d03400          LDR      r3,[r0,#0x400]
0000d8  438b              BICS     r3,r3,r1
                  |L1.218|
0000da  f8c03400          STR      r3,[r0,#0x400]
;;;47         GPIOx->AFSEL = ((ulPinIO & 2) ? (GPIOx->AFSEL | ucPins) :      //第二功能
0000de  0792              LSLS     r2,r2,#30
0000e0  d503              BPL      |L1.234|
0000e2  f8d02420          LDR      r2,[r0,#0x420]
0000e6  430a              ORRS     r2,r2,r1
0000e8  e002              B        |L1.240|
                  |L1.234|
;;;48                                         (GPIOx->AFSEL &( ~(ucPins)))); //I/O口
0000ea  f8d02420          LDR      r2,[r0,#0x420]
0000ee  438a              BICS     r2,r2,r1
                  |L1.240|
0000f0  f8c02420          STR      r2,[r0,#0x420]
;;;49     }
0000f4  4770              BX       lr
;;;50     
                          ENDP

                  GPIOPinTypeSSI PROC
;;;345    *****************************************************************************/
;;;346    void GPIOPinTypeSSI(GPIO_Typedef *GPIOx, u8 ucPins)
0000f6  b530              PUSH     {r4,r5,lr}
;;;347    {
0000f8  4604              MOV      r4,r0
0000fa  460d              MOV      r5,r1
;;;348        ASSERT(GPIOBaseValid(GPIOx));
;;;349        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_HW);
0000fc  2202              MOVS     r2,#2
0000fe  4629              MOV      r1,r5
000100  4620              MOV      r0,r4
000102  f7fffffe          BL       GPIODirModeSet
;;;350        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000106  4629              MOV      r1,r5
000108  4620              MOV      r0,r4
00010a  e8bd4030          POP      {r4,r5,lr}
00010e  2308              MOVS     r3,#8
000110  2201              MOVS     r2,#1
000112  e7fe              B        GPIOPadConfigSet
;;;351    }
;;;352    
                          ENDP

                  GPIOPinTypeGPIOOutput PROC
;;;286    *****************************************************************************/
;;;287    void GPIOPinTypeGPIOOutput(GPIO_Typedef *GPIOx, u8 ucPins)
000114  b530              PUSH     {r4,r5,lr}
;;;288    {
000116  4604              MOV      r4,r0
000118  460d              MOV      r5,r1
;;;289        ASSERT(GPIOBaseValid(GPIOx));
;;;290        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_OUT);
00011a  2201              MOVS     r2,#1
00011c  4629              MOV      r1,r5
00011e  4620              MOV      r0,r4
000120  f7fffffe          BL       GPIODirModeSet
;;;291        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000124  4629              MOV      r1,r5
000126  4620              MOV      r0,r4
000128  e8bd4030          POP      {r4,r5,lr}
00012c  2308              MOVS     r3,#8
00012e  2201              MOVS     r2,#1
000130  e7fe              B        GPIOPadConfigSet
;;;292    }
;;;293    
                          ENDP

                  Init_Gpio PROC
;;;12     *****************************************************************************/
;;;13     void Init_Gpio(void)
000132  b510              PUSH     {r4,lr}
;;;14     {
;;;15     //设备时钟使能
;;;16         SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);//使能端口A时钟
000134  f44f7040          MOV      r0,#0x300
000138  f7fffffe          BL       SysCtlPeripheralEnable
;;;17     //初始化GPIOA口
;;;18         GPIOPinTypeGPIOOutput(GPIOA,            //端口
00013c  f04f2440          MOV      r4,#0x40004000
000140  2110              MOVS     r1,#0x10
000142  4620              MOV      r0,r4
000144  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;19                               DISP_RST);        //管脚 PA.4 HD7219复位输出
;;;20         GPIOPinTypeSSI(GPIOA,                   //端口
000148  4620              MOV      r0,r4
00014a  e8bd4010          POP      {r4,lr}
00014e  212c              MOVS     r1,#0x2c
000150  e7fe              B        GPIOPinTypeSSI
;;;21                        SSICLK|SSIFSS|SSITX);    //管脚 SSICLK SSIFSS SSITX设置为SSI管脚  PA.2 PA.3 PA.5
;;;22     //初始化GPIOB口                             
;;;23     //初始化GPIOC口                             
;;;24     //初始化GPIOD口                             
;;;25     //初始化GPIOE口  
;;;26     //初始化GPIOF口                             
;;;27     //初始化GPIOH口                             
;;;28     //初始化端口中断 GPIOB
;;;29     //初始化端口中断 GPIOC
;;;30     //初始化端口中断 GPIOF
;;;31                                         
;;;32     //端口初步设置
;;;33     }
;;;34     /*****************************************************************************
                          ENDP

                  GPIOPinWrite PROC
;;;259    *****************************************************************************/
;;;260    void GPIOPinWrite(GPIO_Typedef *GPIOx, u8 ucPins, u8 ucVal)
000152  f8402021          STR      r2,[r0,r1,LSL #2]
;;;261    {
;;;262        ASSERT(GPIOBaseValid(GPIOx));
;;;263    
;;;264        GPIOx->DATA[ucPins] = ucVal;
;;;265    }
000156  4770              BX       lr
;;;266    
                          ENDP


                          AREA ||area_number.2||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.2||, ||.text||
                  GPIODirModeGet PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  f8d02400          LDR      r2,[r0,#0x400]
;;;274    {
000004  f8d03420          LDR      r3,[r0,#0x420]
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000008  420a              TST      r2,r1
00000a  d001              BEQ      |L2.16|
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L2.18|
                  |L2.16|
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  2000              MOVS     r0,#0
                  |L2.18|
000012  420b              TST      r3,r1
000014  d001              BEQ      |L2.26|
000016  2102              MOVS     r1,#2
000018  e000              B        |L2.28|
                  |L2.26|
00001a  2100              MOVS     r1,#0
                  |L2.28|
00001c  4308              ORRS     r0,r0,r1
00001e  4770              BX       lr
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.3||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.3||, ||.text||
                  GPIOIntTypeSet PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  07d3              LSLS     r3,r2,#31
;;;274    {
000002  d003              BEQ      |L3.12|
000004  f8d03408          LDR      r3,[r0,#0x408]
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000008  430b              ORRS     r3,r3,r1
00000a  e002              B        |L3.18|
                  |L3.12|
00000c  f8d03408          LDR      r3,[r0,#0x408]
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  438b              BICS     r3,r3,r1
                  |L3.18|
000012  f8c03408          STR      r3,[r0,#0x408]
000016  0793              LSLS     r3,r2,#30
000018  d503              BPL      |L3.34|
00001a  f8d03404          LDR      r3,[r0,#0x404]
00001e  430b              ORRS     r3,r3,r1
000020  e002              B        |L3.40|
                  |L3.34|
000022  f8d03404          LDR      r3,[r0,#0x404]
000026  438b              BICS     r3,r3,r1
                  |L3.40|
000028  f8c03404          STR      r3,[r0,#0x404]
00002c  0752              LSLS     r2,r2,#29
00002e  d503              BPL      |L3.56|
000030  f8d0240c          LDR      r2,[r0,#0x40c]
000034  430a              ORRS     r2,r2,r1
000036  e002              B        |L3.62|
                  |L3.56|
000038  f8d0240c          LDR      r2,[r0,#0x40c]
00003c  438a              BICS     r2,r2,r1
                  |L3.62|
00003e  f8c0240c          STR      r2,[r0,#0x40c]
000042  4770              BX       lr
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.4||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.4||, ||.text||
                  GPIOIntTypeGet PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b510              PUSH     {r4,lr}
;;;274    {
000002  f2004004          ADD      r0,r0,#0x404
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  6843              LDR      r3,[r0,#4]
000008  6802              LDR      r2,[r0,#0]
00000a  6884              LDR      r4,[r0,#8]
00000c  420b              TST      r3,r1
00000e  d001              BEQ      |L4.20|
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  2001              MOVS     r0,#1
000012  e000              B        |L4.22|
                  |L4.20|
000014  2000              MOVS     r0,#0
                  |L4.22|
000016  420a              TST      r2,r1
000018  d001              BEQ      |L4.30|
00001a  2202              MOVS     r2,#2
00001c  e000              B        |L4.32|
                  |L4.30|
00001e  2200              MOVS     r2,#0
                  |L4.32|
000020  4310              ORRS     r0,r0,r2
000022  420c              TST      r4,r1
000024  d001              BEQ      |L4.42|
000026  2104              MOVS     r1,#4
000028  e000              B        |L4.44|
                  |L4.42|
00002a  2100              MOVS     r1,#0
                  |L4.44|
00002c  4308              ORRS     r0,r0,r1
00002e  bd10              POP      {r4,pc}
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.5||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.5||, ||.text||
                  GPIOPadConfigGet PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b5f0              PUSH     {r4-r7,lr}
;;;274    {
000002  f8d04500          LDR      r4,[r0,#0x500]
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  f8d05504          LDR      r5,[r0,#0x504]
00000a  f8d07508          LDR      r7,[r0,#0x508]
00000e  f8d06518          LDR      r6,[r0,#0x518]
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000012  420c              TST      r4,r1
000014  d001              BEQ      |L5.26|
000016  2401              MOVS     r4,#1
000018  e000              B        |L5.28|
                  |L5.26|
00001a  2400              MOVS     r4,#0
                  |L5.28|
00001c  420d              TST      r5,r1
00001e  d001              BEQ      |L5.36|
000020  2502              MOVS     r5,#2
000022  e000              B        |L5.38|
                  |L5.36|
000024  2500              MOVS     r5,#0
                  |L5.38|
000026  432c              ORRS     r4,r4,r5
000028  420f              TST      r7,r1
00002a  d001              BEQ      |L5.48|
00002c  2504              MOVS     r5,#4
00002e  e000              B        |L5.50|
                  |L5.48|
000030  2500              MOVS     r5,#0
                  |L5.50|
000032  432c              ORRS     r4,r4,r5
000034  420e              TST      r6,r1
000036  d001              BEQ      |L5.60|
000038  2508              MOVS     r5,#8
00003a  e000              B        |L5.62|
                  |L5.60|
00003c  2500              MOVS     r5,#0
                  |L5.62|
00003e  432c              ORRS     r4,r4,r5
000040  6014              STR      r4,[r2,#0]
000042  f200500c          ADD      r0,r0,#0x50c
000046  6806              LDR      r6,[r0,#0]
000048  6842              LDR      r2,[r0,#4]
00004a  6884              LDR      r4,[r0,#8]
00004c  6905              LDR      r5,[r0,#0x10]
00004e  420e              TST      r6,r1
000050  d001              BEQ      |L5.86|
000052  2001              MOVS     r0,#1
000054  e000              B        |L5.88|
                  |L5.86|
000056  2000              MOVS     r0,#0
                  |L5.88|
000058  420a              TST      r2,r1
00005a  d001              BEQ      |L5.96|
00005c  2202              MOVS     r2,#2
00005e  e000              B        |L5.98|
                  |L5.96|
000060  2200              MOVS     r2,#0
                  |L5.98|
000062  4310              ORRS     r0,r0,r2
000064  420c              TST      r4,r1
000066  d001              BEQ      |L5.108|
000068  2204              MOVS     r2,#4
00006a  e000              B        |L5.110|
                  |L5.108|
00006c  2200              MOVS     r2,#0
                  |L5.110|
00006e  4310              ORRS     r0,r0,r2
000070  420d              TST      r5,r1
000072  d001              BEQ      |L5.120|
000074  2108              MOVS     r1,#8
000076  e000              B        |L5.122|
                  |L5.120|
000078  2100              MOVS     r1,#0
                  |L5.122|
00007a  4308              ORRS     r0,r0,r1
00007c  6018              STR      r0,[r3,#0]
00007e  bdf0              POP      {r4-r7,pc}
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.6||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.6||, ||.text||
                  GPIOPinIntEnable PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  f8d02410          LDR      r2,[r0,#0x410]
;;;274    {
000004  430a              ORRS     r2,r2,r1
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  f8c02410          STR      r2,[r0,#0x410]
00000a  4770              BX       lr
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.7||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.7||, ||.text||
                  GPIOPinIntDisable PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  f8d02410          LDR      r2,[r0,#0x410]
;;;274    {
000004  438a              BICS     r2,r2,r1
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  f8c02410          STR      r2,[r0,#0x410]
00000a  4770              BX       lr
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.8||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.text||
                  GPIOPinIntStatus PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b111              CBZ      r1,|L8.8|
;;;274    {
000002  f8d00418          LDR      r0,[r0,#0x418]
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  4770              BX       lr
                  |L8.8|
000008  f8d00414          LDR      r0,[r0,#0x414]
00000c  4770              BX       lr
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.9||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.9||, ||.text||
                  GPIOPinIntClear PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  f8c0141c          STR      r1,[r0,#0x41c]
;;;274    {
000004  4770              BX       lr
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.10||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.10||, ||.text||
                  GPIOPinRead PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  f8500021          LDR      r0,[r0,r1,LSL #2]
;;;274    {
000004  4770              BX       lr
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.11||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.11||, ||.text||
                  GPIOPinTypeGPIOInput PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b530              PUSH     {r4,r5,lr}
;;;274    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  2200              MOVS     r2,#0
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GPIODirModeSet
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  e8bd4030          POP      {r4,r5,lr}
000018  2308              MOVS     r3,#8
00001a  2201              MOVS     r2,#1
00001c  f7ffbffe          B.W      GPIOPadConfigSet
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.12||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.12||, ||.text||
                  GPIOPinTypeGPIOOutputOD PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b530              PUSH     {r4,r5,lr}
;;;274    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  2201              MOVS     r2,#1
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GPIODirModeSet
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  e8bd4030          POP      {r4,r5,lr}
000018  2309              MOVS     r3,#9
00001a  2201              MOVS     r2,#1
00001c  f7ffbffe          B.W      GPIOPadConfigSet
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.13||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.13||, ||.text||
                  GPIOPinTypeI2C PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b530              PUSH     {r4,r5,lr}
;;;274    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  2202              MOVS     r2,#2
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GPIODirModeSet
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  e8bd4030          POP      {r4,r5,lr}
000018  230b              MOVS     r3,#0xb
00001a  2201              MOVS     r2,#1
00001c  f7ffbffe          B.W      GPIOPadConfigSet
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.14||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.14||, ||.text||
                  GPIOPinTypePWM PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b530              PUSH     {r4,r5,lr}
;;;274    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  2202              MOVS     r2,#2
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GPIODirModeSet
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  e8bd4030          POP      {r4,r5,lr}
000018  2308              MOVS     r3,#8
00001a  2201              MOVS     r2,#1
00001c  f7ffbffe          B.W      GPIOPadConfigSet
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.15||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.15||, ||.text||
                  GPIOPinTypeQEI PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b530              PUSH     {r4,r5,lr}
;;;274    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  2202              MOVS     r2,#2
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GPIODirModeSet
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  e8bd4030          POP      {r4,r5,lr}
000018  230a              MOVS     r3,#0xa
00001a  2201              MOVS     r2,#1
00001c  f7ffbffe          B.W      GPIOPadConfigSet
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.16||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.16||, ||.text||
                  GPIOPinTypeTimer PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b530              PUSH     {r4,r5,lr}
;;;274    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  2202              MOVS     r2,#2
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GPIODirModeSet
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  e8bd4030          POP      {r4,r5,lr}
000018  2308              MOVS     r3,#8
00001a  2201              MOVS     r2,#1
00001c  f7ffbffe          B.W      GPIOPadConfigSet
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.17||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.17||, ||.text||
                  GPIOPinTypeUART PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b530              PUSH     {r4,r5,lr}
;;;274    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  2202              MOVS     r2,#2
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GPIODirModeSet
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  e8bd4030          POP      {r4,r5,lr}
000018  2308              MOVS     r3,#8
00001a  2201              MOVS     r2,#1
00001c  f7ffbffe          B.W      GPIOPadConfigSet
;;;280    }
;;;281    
                          ENDP


                          AREA ||area_number.18||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.18||, ||.text||
                  GPIOPinTypeUSBDigital PROC
;;;272    *****************************************************************************/
;;;273    void GPIOPinTypeGPIOInput(GPIO_Typedef *GPIOx, u8 ucPins)
000000  b530              PUSH     {r4,r5,lr}
;;;274    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;275        ASSERT(GPIOBaseValid(GPIOx));
;;;276    
;;;277        GPIODirModeSet(GPIOx, ucPins, GPIO_DIR_MODE_IN);
000006  2202              MOVS     r2,#2
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GPIODirModeSet
;;;278    
;;;279        GPIOPadConfigSet(GPIOx, ucPins, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  e8bd4030          POP      {r4,r5,lr}
000018  2308              MOVS     r3,#8
00001a  2201              MOVS     r2,#1
00001c  f7ffbffe          B.W      GPIOPadConfigSet
;;;280    }
;;;281    
                          ENDP

